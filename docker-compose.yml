version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - msc-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - SHADOW_DATABASE_URL=${SHADOW_DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - N8N_URL=${N8N_URL}
      - N8N_API_KEY=${N8N_API_KEY}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - N8N_PORT=${N8N_PORT}
      - DOCUSEAL_URL=${DOCUSEAL_URL}
      - DOCUSEAL_API_KEY=${DOCUSEAL_API_KEY}
      - DOCUSEAL_IVR_TEMPLATE_ID=${DOCUSEAL_IVR_TEMPLATE_ID}
      - DOCUSEAL_ONBOARDING_TEMPLATE_ID=${DOCUSEAL_ONBOARDING_TEMPLATE_ID}
      - DOCUSEAL_AGREEMENT_TEMPLATE_ID=${DOCUSEAL_AGREEMENT_TEMPLATE_ID}
      - DOCUSEAL_ORDER_TEMPLATE_ID=${DOCUSEAL_ORDER_TEMPLATE_ID}
      - DOCUSEAL_PROJECT_ID=${DOCUSEAL_PROJECT_ID}
      - DOCUSEAL_SERVICE_ID=${DOCUSEAL_SERVICE_ID}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3000/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "3000:3000"
    # Railway volumes are configured in railway.toml instead of here
    networks:
      - msc-network
    restart: unless-stopped

  # n8n and DocuSeal are hosted on Railway
  # We connect to existing instances, not spinning up our own

networks:
  msc-network:
    driver: bridge
